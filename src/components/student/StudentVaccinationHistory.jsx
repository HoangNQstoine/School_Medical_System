import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Shield, CalendarCheck, Download, Filter, CheckCircle, Clock, AlertCircle, PlusCircle } from 'lucide-react';
import { toast } from '@/components/ui/use-toast';
import { Badge } from '@/components/ui/badge';
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";

const mockVaccinationHistory = [
  {
    id: 'vh1',
    vaccineName: 'S·ªüi - Quai b·ªã - Rubella (MMR) - M≈©i 1',
    dateAdministered: '2010-07-20',
    administeredBy: 'Trung t√¢m Y t·∫ø D·ª± ph√≤ng Qu·∫≠n 1',
    lotNumber: 'MMR123X',
    status: 'ƒê√£ ho√†n th√†nh',
    nextDueDate: '2025-07-15 (M≈©i 2)',
  },
  {
    id: 'vh2',
    vaccineName: 'Vi√™m gan B - M≈©i 3',
    dateAdministered: '2009-01-10',
    administeredBy: 'B·ªánh vi·ªán Nhi ƒê·ªìng 2',
    lotNumber: 'VGB567Y',
    status: 'ƒê√£ ho√†n th√†nh',
    nextDueDate: null,
  },
  {
    id: 'vh3',
    vaccineName: 'U·ªën v√°n - B·∫°ch h·∫ßu - Ho g√† (Tdap)',
    dateAdministered: '2024-12-10',
    administeredBy: 'Ph√≤ng Y t·∫ø Tr∆∞·ªùng THPT ABC',
    lotNumber: 'TDAP007Z',
    status: 'ƒê√£ ho√†n th√†nh',
    nextDueDate: 'Kho·∫£ng 10 nƒÉm sau',
  },
  {
    id: 'vh4',
    vaccineName: 'C√∫m m√πa (h√†ng nƒÉm)',
    dateAdministered: null,
    administeredBy: null,
    lotNumber: null,
    status: 'S·∫Øp ƒë·∫øn h·∫°n',
    nextDueDate: '2025-10-01',
  },
   {
    id: 'vh5',
    vaccineName: 'Th·ªßy ƒë·∫≠u - M≈©i 1',
    dateAdministered: '2012-05-15',
    administeredBy: 'Trung t√¢m Y t·∫ø D·ª± ph√≤ng Qu·∫≠n 1',
    lotNumber: 'TD001A',
    status: 'ƒê√£ ho√†n th√†nh',
    nextDueDate: '2024-11-05 (M≈©i 2 - ƒê√£ ho√†n th√†nh)',
  },
];

const StatusBadge = ({ status }) => {
  let icon;
  let colorClasses;

  if (status.includes('ƒê√£ ho√†n th√†nh')) {
    icon = <CheckCircle className="w-3.5 h-3.5 mr-1.5" />;
    colorClasses = 'bg-green-100 text-green-700';
  } else if (status.includes('S·∫Øp ƒë·∫øn h·∫°n')) {
    icon = <Clock className="w-3.5 h-3.5 mr-1.5" />;
    colorClasses = 'bg-yellow-100 text-yellow-700';
  } else if (status.includes('Qu√° h·∫°n')) {
    icon = <AlertCircle className="w-3.5 h-3.5 mr-1.5" />;
    colorClasses = 'bg-red-100 text-red-700';
  } else {
    icon = <Clock className="w-3.5 h-3.5 mr-1.5" />;
    colorClasses = 'bg-gray-100 text-gray-700';
  }
  return <Badge variant="outline" className={`flex items-center text-xs ${colorClasses}`}>{icon}{status}</Badge>;
};


const StudentVaccinationHistory = () => {
  const [vaccinations, setVaccinations] = useState(mockVaccinationHistory);
  const [filterType, setFilterType] = useState('all'); // 'all', 'completed', 'upcoming'

  const filteredVaccinations = vaccinations.filter(v => {
    if (filterType === 'all') return true;
    if (filterType === 'completed') return v.status.includes('ƒê√£ ho√†n th√†nh');
    if (filterType === 'upcoming') return v.status.includes('S·∫Øp ƒë·∫øn h·∫°n') || v.status.includes('Qu√° h·∫°n');
    return true;
  }).sort((a,b) => {
    const dateA = a.dateAdministered ? new Date(a.dateAdministered) : new Date(a.nextDueDate || 0);
    const dateB = b.dateAdministered ? new Date(b.dateAdministered) : new Date(b.nextDueDate || 0);
    return dateB - dateA;
  });

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="space-y-6"
    >
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">L·ªãch s·ª≠ ti√™m ch·ªßng</h1>
          <p className="text-gray-600 mt-2">T·ªïng quan v·ªÅ c√°c m≈©i v·∫Øc-xin ƒë√£ ti√™m v√† l·ªãch tr√¨nh.</p>
        </div>
        <div className="flex flex-wrap gap-2">
           <Button variant="outline" onClick={() => toast({ title: "üöß T√≠nh nƒÉng ch∆∞a ƒë∆∞·ª£c tri·ªÉn khai", description: "B·∫°n c√≥ th·ªÉ y√™u c·∫ßu t√≠nh nƒÉng n√†y ·ªü l·∫ßn nh·∫Øc ti·∫øp theo! üöÄ" })}>
            <Filter className="w-4 h-4 mr-2" />
            L·ªçc ({filterType})
          </Button>
          <Button className="btn-primary" onClick={() => toast({ title: "üöß T√≠nh nƒÉng ch∆∞a ƒë∆∞·ª£c tri·ªÉn khai", description: "B·∫°n c√≥ th·ªÉ y√™u c·∫ßu t√≠nh nƒÉng n√†y ·ªü l·∫ßn nh·∫Øc ti·∫øp theo! üöÄ" })}>
            <Download className="w-4 h-4 mr-2" />
            T·∫£i xu·ªëng PDF
          </Button>
        </div>
      </div>

      <Card>
        <CardHeader>
          <div className="flex justify-between items-center">
            <div>
              <CardTitle className="flex items-center">
                <CalendarCheck className="w-5 h-5 mr-2 text-blue-600" />
                Danh s√°ch m≈©i ti√™m
              </CardTitle>
              <CardDescription>
                Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt v·ªÅ c√°c l·∫ßn ti√™m ch·ªßng c·ªßa b·∫°n.
              </CardDescription>
            </div>
             <Button variant="outline" size="sm" onClick={() => toast({ title: "üöß T√≠nh nƒÉng ch∆∞a ƒë∆∞·ª£c tri·ªÉn khai", description: "Ch·ª©c nƒÉng th√™m m≈©i ti√™m m·ªõi s·∫Ω s·ªõm ƒë∆∞·ª£c c·∫≠p nh·∫≠t! üöÄ" })}>
              <PlusCircle className="w-4 h-4 mr-2" />
              Th√™m m≈©i ti√™m
            </Button>
          </div>
        </CardHeader>
        <CardContent>
          {filteredVaccinations.length > 0 ? (
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>T√™n v·∫Øc-xin</TableHead>
                  <TableHead>Ng√†y ti√™m</TableHead>
                  <TableHead className="hidden lg:table-cell">N∆°i ti√™m</TableHead>
                  <TableHead>Tr·∫°ng th√°i</TableHead>
                  <TableHead className="hidden md:table-cell">L·ªãch nh·∫Øc l·∫°i</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {filteredVaccinations.map((vaccine) => (
                  <TableRow key={vaccine.id}>
                    <TableCell className="font-medium">{vaccine.vaccineName}</TableCell>
                    <TableCell>{vaccine.dateAdministered || 'Ch∆∞a ti√™m'}</TableCell>
                    <TableCell className="hidden lg:table-cell">{vaccine.administeredBy || 'N/A'}</TableCell>
                    <TableCell><StatusBadge status={vaccine.status} /></TableCell>
                    <TableCell className="hidden md:table-cell">{vaccine.nextDueDate || 'Kh√¥ng c√≥'}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          ) : (
            <div className="text-center py-12">
              <Shield className="mx-auto h-16 w-16 text-gray-400 mb-4" />
              <h3 className="text-xl font-semibold text-gray-700">Kh√¥ng c√≥ d·ªØ li·ªáu ti√™m ch·ªßng</h3>
              <p className="text-gray-500 mt-2">L·ªãch s·ª≠ ti√™m ch·ªßng c·ªßa b·∫°n hi·ªán ƒëang tr·ªëng ho·∫∑c kh√¥ng kh·ªõp v·ªõi b·ªô l·ªçc.</p>
               <Button className="mt-6 btn-primary" onClick={() => toast({ title: "üöß T√≠nh nƒÉng ch∆∞a ƒë∆∞·ª£c tri·ªÉn khai", description: "B·∫°n c√≥ th·ªÉ y√™u c·∫ßu t√≠nh nƒÉng n√†y ·ªü l·∫ßn nh·∫Øc ti·∫øp theo! üöÄ" })}>
                C·∫≠p nh·∫≠t l·ªãch s·ª≠ ti√™m
              </Button>
            </div>
          )}
        </CardContent>
      </Card>
       <Card className="bg-teal-50 border-teal-200">
        <CardHeader>
          <CardTitle className="text-teal-700 flex items-center text-lg">
            <Shield className="w-5 h-5 mr-2" />
            V√¨ sao ti√™m ch·ªßng quan tr·ªçng?
          </CardTitle>
        </CardHeader>
        <CardContent className="text-teal-600 text-sm">
          <p>Ti√™m ch·ªßng l√† m·ªôt trong nh·ªØng bi·ªán ph√°p ph√≤ng b·ªánh hi·ªáu qu·∫£ nh·∫•t, gi√∫p c∆° th·ªÉ t·∫°o ra kh√°ng th·ªÉ ch·ªëng l·∫°i c√°c b·ªánh truy·ªÅn nhi·ªÖm nguy hi·ªÉm. Vi·ªác ti√™m ch·ªßng ƒë·∫ßy ƒë·ªß v√† ƒë√∫ng l·ªãch kh√¥ng ch·ªâ b·∫£o v·ªá s·ª©c kh·ªèe c√° nh√¢n m√† c√≤n g√≥p ph·∫ßn b·∫£o v·ªá c·ªông ƒë·ªìng.</p>
        </CardContent>
      </Card>
    </motion.div>
  );
};

export default StudentVaccinationHistory;